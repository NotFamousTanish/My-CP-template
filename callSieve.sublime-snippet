const int maxn = 1e6+8;
int spf[maxn];
void sieve(){
    spf[1] = 0;
    for(int i = 2; i<maxn; i++){
        spf[i] = i;
    }
    for(int i = 2; i*i < maxn; i++){
        if(spf[i] == i){
            for(int j = i*i; j<maxn; j+=i){
                if(spf[j] == j){
                    spf[j] = i;
                }
            }
        }
    }
}

void getFactors(int n, vector<int>&fcs){
    while(n!=1){
        fcs.push_back(spf[n]);
        n/=spf[n];
    }
}

void getDivisors(int n, set<int>&divs){
    for(int i = 1; i*i<=n; i++){
        if(n%i==0){
            if(n/i == i){
                divs.insert(i);
            }else{
                divs.insert(n/i);
                divs.insert(i);
            }
        }
    }
}
